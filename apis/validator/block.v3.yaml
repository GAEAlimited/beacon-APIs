get:
  tags:
    - ValidatorRequiredApi
    - Validator
  operationId: "produceBlockV3"
  summary: "Produce a new block, without signature."
  description: |
    Requests a beacon node to produce a valid block, which can then be signed by a validator. The
    returned block may be blinded or unblinded, depending on the current state of the network as
    decided by the execution and beacon nodes.

    The beacon node must return an unblinded block if it obtains the execution payload from its
    paired execution node. It must only return a blinded block if it obtains the execution payload
    header from an MEV relay.

    Metadata in the response indicates the type of block produced, and the supported types of block
    will be added to as forks progress.
  parameters:
    - name: slot
      in: path
      required: true
      description: "The slot for which the block should be proposed."
      schema:
        $ref: "../../beacon-node-oapi.yaml#/components/schemas/Uint64"
    - name: randao_reveal
      in: query
      required: true
      description: "The validator's randao reveal value."
      schema:
        $ref: '../../beacon-node-oapi.yaml#/components/schemas/Signature'
    - name: graffiti
      in: query
      required: false
      description: "Arbitrary data validator wants to include in block."
      schema:
        $ref: '../../beacon-node-oapi.yaml#/components/schemas/Graffiti'
    - name: skip_randao_verification
      in: query
      required: false
      description: |
        Skip verification of the `randao_reveal` value. If this flag is set then the
        `randao_reveal` must be set to the point at infinity (`0xc0..00`). This query parameter
        is a flag and does not take a value.
      schema: {}
      allowEmptyValue: true
  responses:
    "200":
      description: Success response
      headers:
        Eth-Consensus-Version:
          $ref: '../../beacon-node-oapi.yaml#/components/headers/Eth-Consensus-Version'
        Eth-Execution-Payload-Blinded:
          $ref: '../../beacon-node-oapi.yaml#/components/headers/Eth-Execution-Payload-Blinded'
        Eth-Execution-Payload-Value:
          $ref: '../../beacon-node-oapi.yaml#/components/headers/Eth-Execution-Payload-Value'
        Eth-Consensus-Block-Value:
          $ref: '../../beacon-node-oapi.yaml#/components/headers/Eth-Consensus-Block-Value'
      content:
        application/json:
          schema:
            title: ProduceBlockV3Response
            type: object
            properties:
              version:
                type: string
                enum: [ phase0, altair, bellatrix, capella, deneb ]
                example: "phase0"
              execution_payload_blinded:
                type: boolean
                example: false
              execution_payload_value:
                type: string
                example: "12345"
              consensus_block_value:
                type: string
                example: "12345"
              data:
                oneOf:
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Altair.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Bellatrix.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Bellatrix.BlindedBeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Capella.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Capella.BlindedBeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Deneb.BlockContents"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Deneb.BlindedBeaconBlock"
        application/octet-stream:
          schema:
            description: "SSZ serialized block or blinded block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version` and block type in `Eth-Blinded-Payload`."
    "400":
      description: "Invalid block production request"
      content:
        application/json:
          schema:
            $ref: "../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          examples:
            InvalidRequest:
              value:
                code: 400
                message: "Invalid request to produce a block"
    "500":
      $ref: '../../beacon-node-oapi.yaml#/components/responses/InternalError'
    "503":
      $ref: '../../beacon-node-oapi.yaml#/components/responses/CurrentlySyncing'
